name: Upload Python Package and Docker Container
permissions:
  contents: read

on:
  push:
    branches:
      - main
  release:
    types:
      - created

jobs:
  deploy:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Set __version__ and poetry version
        run: |
          TAG="$(git describe --tags --always | awk -F"-" '{if (NF>1) {print substr($1, 2)".post"$2} else {print substr($1, 2)}}')"
          sed "s/__version__.*/__version__ = \"$TAG\"/" -i asu/__init__.py
          poetry version "$TAG"

      - name: Build and publish PyPi package
        if: github.event_name == 'release'
        run: |
          poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
          poetry publish --build

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: openwrt/asu
          tags: |
            type=semver,pattern={{version}}
            latest

      - name: Login to DockerHub
        if: github.repository_owner == 'openwrt'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push ASU to Docker Hub
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Containerfile
          push: ${{ github.repository_owner == 'openwrt' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
